name: Release

on:
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # - os: ubuntu-latest
          #   target: aarch64-unknown-linux-gnu

    runs-on: ${{ matrix.os }}
    env:
      RELEASE_NAME: aobscan
      BUILD_NAME: aobscan-cli
      TARGET: ${{ matrix.target }}
      OS: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{matrix.TARGET}}

      - name: Install Rust Toolchain
        run: rustup target add $TARGET

      - name: Build
        run: cargo build --release --verbose --target $TARGET

      - name: Package
        run: |
          mkdir -p artifacts
          
          # On Windows, the executable ends with the [.exe] extension.
          RELEASE_NAME_FULL=$RELEASE_NAME
          if [[ $OS =~ ^windows.*$ ]]; then
            BUILD_NAME=$BUILD_NAME.exe
            RELEASE_NAME_FULL=$RELEASE_NAME.exe
          fi
          
          # We want the executable to be named [aobscan] instead of [aobscan-cli], as it
          # is shorter to type in the command line.
          mv target/$TARGET/release/$BUILD_NAME artifacts/$RELEASE_NAME_FULL
          
          # Package the executable into an archive named with the build target.
          tar -czf artifacts/$RELEASE_NAME-$TARGET.tar.gz --remove-files artifacts/$RELEASE_NAME_FULL

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: result
          path: artifacts

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: result
          path: artifacts

      - name: Print Artifacts
        run: ls -l artifacts

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*

      - name: Delete Release Artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: result
